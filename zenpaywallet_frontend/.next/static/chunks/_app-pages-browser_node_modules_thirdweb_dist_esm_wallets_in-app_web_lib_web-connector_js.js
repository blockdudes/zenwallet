"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_in-app_web_lib_web-connector_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js":
/*!******************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eth_sendRawTransaction: function() { return /* binding */ eth_sendRawTransaction; }\n/* harmony export */ });\n/**\n * Sends a raw transaction to the Ethereum network.\n * @param request - The EIP1193 request function.\n * @param signedTransaction - The signed transaction in hex format.\n * @returns A promise that resolves to the transaction hash.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_sendRawTransaction } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const transactionHash = await eth_sendRawTransaction(rpcRequest, \"0x...\");\n * ```\n */\nasync function eth_sendRawTransaction(request, signedTransaction) {\n    return await request({\n        method: \"eth_sendRawTransaction\",\n        params: [signedTransaction],\n    });\n}\n//# sourceMappingURL=eth_sendRawTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9ycGMvYWN0aW9ucy9ldGhfc2VuZFJhd1RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1Q0FBdUM7QUFDbkQscUNBQXFDLGVBQWU7QUFDcEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcnBjL2FjdGlvbnMvZXRoX3NlbmRSYXdUcmFuc2FjdGlvbi5qcz9hNWE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2VuZHMgYSByYXcgdHJhbnNhY3Rpb24gdG8gdGhlIEV0aGVyZXVtIG5ldHdvcmsuXG4gKiBAcGFyYW0gcmVxdWVzdCAtIFRoZSBFSVAxMTkzIHJlcXVlc3QgZnVuY3Rpb24uXG4gKiBAcGFyYW0gc2lnbmVkVHJhbnNhY3Rpb24gLSBUaGUgc2lnbmVkIHRyYW5zYWN0aW9uIGluIGhleCBmb3JtYXQuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgdHJhbnNhY3Rpb24gaGFzaC5cbiAqIEBycGNcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZ2V0UnBjQ2xpZW50LCBldGhfc2VuZFJhd1RyYW5zYWN0aW9uIH0gZnJvbSBcInRoaXJkd2ViL3JwY1wiO1xuICogY29uc3QgcnBjUmVxdWVzdCA9IGdldFJwY0NsaWVudCh7IGNsaWVudCwgY2hhaW4gfSk7XG4gKiBjb25zdCB0cmFuc2FjdGlvbkhhc2ggPSBhd2FpdCBldGhfc2VuZFJhd1RyYW5zYWN0aW9uKHJwY1JlcXVlc3QsIFwiMHguLi5cIik7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV0aF9zZW5kUmF3VHJhbnNhY3Rpb24ocmVxdWVzdCwgc2lnbmVkVHJhbnNhY3Rpb24pIHtcbiAgICByZXR1cm4gYXdhaXQgcmVxdWVzdCh7XG4gICAgICAgIG1ldGhvZDogXCJldGhfc2VuZFJhd1RyYW5zYWN0aW9uXCIsXG4gICAgICAgIHBhcmFtczogW3NpZ25lZFRyYW5zYWN0aW9uXSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV0aF9zZW5kUmF3VHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/ecosystem/get-ecosystem-partner-permissions.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/ecosystem/get-ecosystem-partner-permissions.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEcosystemPartnerPermissions: function() { return /* binding */ getEcosystemPartnerPermissions; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n\nconst getEcosystemPartnerPermissions = async (ecosystemId, partnerId) => {\n    const res = await fetch(`${(0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebBaseUrl)(\"inAppWallet\")}/api/2024-05-05/ecosystem-wallet/${ecosystemId}/partner/${partnerId}`, {\n        headers: {\n            \"x-ecosystem-id\": ecosystemId,\n            \"x-ecosystem-partner-id\": partnerId || \"\",\n        },\n    });\n    const data = (await res.json());\n    return data;\n};\n//# sourceMappingURL=get-ecosystem-partner-permissions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2Vjb3N5c3RlbS9nZXQtZWNvc3lzdGVtLXBhcnRuZXItcGVybWlzc2lvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEQ7QUFDckQ7QUFDUCwrQkFBK0IscUVBQWtCLGdCQUFnQixtQ0FBbUMsWUFBWSxXQUFXLFVBQVU7QUFDckk7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9lY29zeXN0ZW0vZ2V0LWVjb3N5c3RlbS1wYXJ0bmVyLXBlcm1pc3Npb25zLmpzPzhhMmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VGhpcmR3ZWJCYXNlVXJsIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2RvbWFpbnMuanNcIjtcbmV4cG9ydCBjb25zdCBnZXRFY29zeXN0ZW1QYXJ0bmVyUGVybWlzc2lvbnMgPSBhc3luYyAoZWNvc3lzdGVtSWQsIHBhcnRuZXJJZCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2dldFRoaXJkd2ViQmFzZVVybChcImluQXBwV2FsbGV0XCIpfS9hcGkvMjAyNC0wNS0wNS9lY29zeXN0ZW0td2FsbGV0LyR7ZWNvc3lzdGVtSWR9L3BhcnRuZXIvJHtwYXJ0bmVySWR9YCwge1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIngtZWNvc3lzdGVtLWlkXCI6IGVjb3N5c3RlbUlkLFxuICAgICAgICAgICAgXCJ4LWVjb3N5c3RlbS1wYXJ0bmVyLWlkXCI6IHBhcnRuZXJJZCB8fCBcIlwiLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGRhdGEgPSAoYXdhaXQgcmVzLmpzb24oKSk7XG4gICAgcmV0dXJuIGRhdGE7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWVjb3N5c3RlbS1wYXJ0bmVyLXBlcm1pc3Npb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/ecosystem/get-ecosystem-partner-permissions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractLogin: function() { return /* binding */ AbstractLogin; }\n/* harmony export */ });\n/**\n * @internal\n */\nclass AbstractLogin {\n    /**\n     * Used to manage the user's auth states. This should not be instantiated directly.\n     * @internal\n     */\n    constructor({ baseUrl, querier, preLogin, postLogin, client, ecosystem, }) {\n        Object.defineProperty(this, \"LoginQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"preLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"postLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.baseUrl = baseUrl;\n        this.LoginQuerier = querier;\n        this.preLogin = preLogin;\n        this.postLogin = postLogin;\n        this.client = client;\n        this.ecosystem = ecosystem;\n    }\n    /**\n     * @internal\n     */\n    async sendEmailLoginOtp({ email, }) {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"sendThirdwebEmailLoginOtp\",\n            params: { email },\n        });\n        return result;\n    }\n    /**\n     *\n     * @internal\n     */\n    async sendSmsLoginOtp({ phoneNumber, }) {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"sendThirdwebSmsLoginOtp\",\n            params: { phoneNumber },\n        });\n        return result;\n    }\n}\n//# sourceMappingURL=abstract-login.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvYWJzdHJhY3QtbG9naW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQTJEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFFBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLE9BQU87QUFDN0IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixhQUFhO0FBQ25DLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvd2ViL2xpYi9hdXRoL2Fic3RyYWN0LWxvZ2luLmpzPzhmYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNsYXNzIEFic3RyYWN0TG9naW4ge1xuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gbWFuYWdlIHRoZSB1c2VyJ3MgYXV0aCBzdGF0ZXMuIFRoaXMgc2hvdWxkIG5vdCBiZSBpbnN0YW50aWF0ZWQgZGlyZWN0bHkuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBxdWVyaWVyLCBwcmVMb2dpbiwgcG9zdExvZ2luLCBjbGllbnQsIGVjb3N5c3RlbSwgfSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJMb2dpblF1ZXJpZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicHJlTG9naW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicG9zdExvZ2luXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNsaWVudFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJiYXNlVXJsXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVjb3N5c3RlbVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmJhc2VVcmwgPSBiYXNlVXJsO1xuICAgICAgICB0aGlzLkxvZ2luUXVlcmllciA9IHF1ZXJpZXI7XG4gICAgICAgIHRoaXMucHJlTG9naW4gPSBwcmVMb2dpbjtcbiAgICAgICAgdGhpcy5wb3N0TG9naW4gPSBwb3N0TG9naW47XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLmVjb3N5c3RlbSA9IGVjb3N5c3RlbTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgc2VuZEVtYWlsTG9naW5PdHAoeyBlbWFpbCwgfSkge1xuICAgICAgICBhd2FpdCB0aGlzLnByZUxvZ2luKCk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuTG9naW5RdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJzZW5kVGhpcmR3ZWJFbWFpbExvZ2luT3RwXCIsXG4gICAgICAgICAgICBwYXJhbXM6IHsgZW1haWwgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgc2VuZFNtc0xvZ2luT3RwKHsgcGhvbmVOdW1iZXIsIH0pIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcmVMb2dpbigpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLkxvZ2luUXVlcmllci5jYWxsKHtcbiAgICAgICAgICAgIHByb2NlZHVyZU5hbWU6IFwic2VuZFRoaXJkd2ViU21zTG9naW5PdHBcIixcbiAgICAgICAgICAgIHBhcmFtczogeyBwaG9uZU51bWJlciB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hYnN0cmFjdC1sb2dpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseLogin: function() { return /* binding */ BaseLogin; }\n/* harmony export */ });\n/* harmony import */ var _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/authentication/type.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/type.js\");\n/* harmony import */ var _abstract_login_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-login.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js\");\n\n\n/**\n *\n */\nclass BaseLogin extends _abstract_login_js__WEBPACK_IMPORTED_MODULE_0__.AbstractLogin {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"closeWindow\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ({ isWindowOpenedByFn, win, closeOpenedWindow, }) => {\n                if (isWindowOpenedByFn) {\n                    win?.close();\n                }\n                else {\n                    if (win && closeOpenedWindow) {\n                        closeOpenedWindow(win);\n                    }\n                    else if (win) {\n                        win.close();\n                    }\n                }\n            }\n        });\n    }\n    async getOauthLoginUrl(authProvider) {\n        try {\n            const result = await this.LoginQuerier.call({\n                procedureName: \"getHeadlessOauthLoginLink\",\n                params: { authProvider },\n            });\n            return result;\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    }\n    /**\n     * @internal\n     */\n    async loginWithModal() {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithThirdwebModal\",\n            params: undefined,\n            showIframe: true,\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */\n    async loginWithEmailOtp({ email, }) {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithThirdwebModal\",\n            params: { email },\n            showIframe: true,\n        });\n        return this.postLogin(result);\n    }\n    getOauthPopUpSizing(authProvider) {\n        switch (authProvider) {\n            case _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.AuthProvider.FACEBOOK:\n                return \"width=715, height=555\";\n            default:\n                return \"width=350, height=500\";\n        }\n    }\n    /**\n     * @internal\n     */\n    async loginWithOauth(args) {\n        let win = args?.openedWindow;\n        let isWindowOpenedByFn = false;\n        if (!win) {\n            win = window.open(\"\", \"Login\", this.getOauthPopUpSizing(args.oauthProvider));\n            isWindowOpenedByFn = true;\n        }\n        if (!win) {\n            throw new Error(\"Something went wrong opening pop-up\");\n        }\n        // logout the user\n        // fetch the url to open the login window from iframe\n        const [{ loginLink }] = await Promise.all([\n            this.getOauthLoginUrl(args.oauthProvider),\n            this.preLogin(),\n        ]);\n        win.location.href = loginLink;\n        // listen to result from the login window\n        const result = await new Promise((resolve, reject) => {\n            // detect when the user closes the login window\n            const pollTimer = window.setInterval(async () => {\n                if (!win) {\n                    return;\n                }\n                if (win.closed) {\n                    clearInterval(pollTimer);\n                    window.removeEventListener(\"message\", messageListener);\n                    reject(new Error(\"User closed login window\"));\n                }\n            }, 1000);\n            const messageListener = async (event) => {\n                if (event.origin !== this.baseUrl) {\n                    return;\n                }\n                if (typeof event.data !== \"object\") {\n                    reject(new Error(\"Invalid event data\"));\n                    return;\n                }\n                switch (event.data.eventType) {\n                    case \"userLoginSuccess\": {\n                        window.removeEventListener(\"message\", messageListener);\n                        clearInterval(pollTimer);\n                        this.closeWindow({\n                            isWindowOpenedByFn,\n                            win,\n                            closeOpenedWindow: args?.closeOpenedWindow,\n                        });\n                        if (event.data.authResult) {\n                            resolve(event.data.authResult);\n                        }\n                        break;\n                    }\n                    case \"userLoginFailed\": {\n                        window.removeEventListener(\"message\", messageListener);\n                        clearInterval(pollTimer);\n                        this.closeWindow({\n                            isWindowOpenedByFn,\n                            win,\n                            closeOpenedWindow: args?.closeOpenedWindow,\n                        });\n                        reject(new Error(event.data.error));\n                        break;\n                    }\n                    case \"injectDeveloperClientId\": {\n                        win?.postMessage({\n                            eventType: \"injectDeveloperClientIdResult\",\n                            developerClientId: this.client.clientId,\n                            authOption: args.oauthProvider,\n                            partnerId: this.ecosystem?.partnerId,\n                            ecosystemId: this.ecosystem?.id,\n                        }, this.baseUrl);\n                        break;\n                    }\n                }\n            };\n            window.addEventListener(\"message\", messageListener);\n        });\n        return this.postLogin({\n            storedToken: { ...result.storedToken, shouldStoreCookieString: true },\n            walletDetails: { ...result.walletDetails, isIframeStorageEnabled: false },\n        });\n    }\n    /**\n     * @internal\n     */\n    async loginWithCustomJwt({ encryptionKey, jwt, }) {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithCustomJwt\",\n            params: { encryptionKey, jwt },\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */\n    async loginWithCustomAuthEndpoint({ encryptionKey, payload, }) {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithCustomAuthEndpoint\",\n            params: { encryptionKey, payload },\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */\n    async verifyEmailLoginOtp({ email, otp, recoveryCode, }) {\n        const result = await this.LoginQuerier.call({\n            procedureName: \"verifyThirdwebEmailLoginOtp\",\n            params: { email, otp, recoveryCode },\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */\n    async verifySmsLoginOtp({ phoneNumber, otp, recoveryCode, }) {\n        const result = await this.LoginQuerier.call({\n            procedureName: \"verifyThirdwebSmsLoginOtp\",\n            params: { phoneNumber, otp, recoveryCode },\n        });\n        return this.postLogin(result);\n    }\n}\n//# sourceMappingURL=base-login.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: function() { return /* binding */ Auth; }\n/* harmony export */ });\n/* harmony import */ var _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n/* harmony import */ var _base_login_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base-login.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js\");\n\n\n/**\n *\n */\nclass Auth {\n    /**\n     * Used to manage the user's auth states. This should not be instantiated directly.\n     * @internal\n     */\n    constructor({ client, querier, onAuthSuccess, ecosystem, baseUrl, }) {\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"AuthQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onAuthSuccess\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"BaseLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.AuthQuerier = querier;\n        this.localStorage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_0__.LocalStorage({\n            clientId: client.clientId,\n            ecosystemId: ecosystem?.id,\n        });\n        this.onAuthSuccess = onAuthSuccess;\n        this.BaseLogin = new _base_login_js__WEBPACK_IMPORTED_MODULE_1__.BaseLogin({\n            postLogin: async (result) => {\n                return this.postLogin(result);\n            },\n            preLogin: async () => {\n                await this.preLogin();\n            },\n            ecosystem,\n            querier: querier,\n            client,\n            baseUrl,\n        });\n    }\n    async preLogin() {\n        await this.logout();\n    }\n    async postLogin({ storedToken, walletDetails, }) {\n        if (storedToken.shouldStoreCookieString) {\n            await this.localStorage.saveAuthCookie(storedToken.cookieString);\n        }\n        const initializedUser = await this.onAuthSuccess({\n            storedToken,\n            walletDetails,\n        });\n        return initializedUser;\n    }\n    async loginWithAuthToken(authToken, recoveryCode) {\n        await this.preLogin();\n        const result = await this.AuthQuerier.call({\n            procedureName: \"loginWithStoredTokenDetails\",\n            params: {\n                storedToken: authToken.storedToken,\n                recoveryCode,\n            },\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * Used to log the user into their thirdweb wallet on your platform via a myriad of auth providers\n     * @example\n     * ```typescript\n     * const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"YOUR_CLIENT_ID\", chain: \"Polygon\"})\n     * try {\n     *   const user = await thirdwebInAppWallet.auth.loginWithModal();\n     *   // user is now logged in\n     * } catch (e) {\n     *   // User closed modal or something else went wrong during the authentication process\n     *   console.error(e)\n     * }\n     * ```\n     * @returns `{{user: InitializedUser}}` An InitializedUser object.\n     */\n    async loginWithModal() {\n        return this.BaseLogin.loginWithModal();\n    }\n    /**\n     * Used to log the user into their thirdweb wallet using email OTP\n     * @example\n     * ```typescript\n     *  // Basic Flow\n     *  const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"\", chain: \"Polygon\"});\n     *  try {\n     *    // prompts user to enter the code they received\n     *    const user = await thirdwebInAppWallet.auth.loginWithThirdwebEmailOtp({ email : \"you@example.com\" });\n     *    // user is now logged in\n     *  } catch (e) {\n     *    // User closed the OTP modal or something else went wrong during the authentication process\n     *    console.error(e)\n     *  }\n     * ```\n     * @param args - args.email: We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link InAppWalletSdk.getUser} for more\n     */\n    async loginWithEmailOtp(args) {\n        return this.BaseLogin.loginWithEmailOtp(args);\n    }\n    /**\n     * @internal\n     */\n    async loginWithCustomJwt(args) {\n        return this.BaseLogin.loginWithCustomJwt(args);\n    }\n    /**\n     * @internal\n     */\n    async loginWithCustomAuthEndpoint(args) {\n        return this.BaseLogin.loginWithCustomAuthEndpoint(args);\n    }\n    /**\n     * @internal\n     */\n    async loginWithOauth(args) {\n        return this.BaseLogin.loginWithOauth(args);\n    }\n    /**\n     * A headless way to send the users at the passed email an OTP code.\n     * You need to then call {@link Auth.verifyEmailLoginOtp} in order to complete the login process\n     * @example\n     * @param param0.email\n     * ```typescript\n     *  const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"\", chain: \"Polygon\"});\n     *  // sends user an OTP code\n     * try {\n     *    await thirdwebInAppWallet.auth.sendEmailLoginOtp({ email : \"you@example.com\" });\n     * } catch(e) {\n     *    // Error Sending user's email an OTP code\n     *    console.error(e);\n     * }\n     *\n     * // Then when your user is ready to verify their OTP\n     * try {\n     *    const user = await thirdwebInAppWallet.auth.verifyEmailLoginOtp({ email: \"you@example.com\", otp: \"6-DIGIT_CODE_HERE\" });\n     * } catch(e) {\n     *    // Error verifying the OTP code\n     *    console.error(e)\n     * }\n     * ```\n     * @param param0 - param0.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * @returns `{{ isNewUser: boolean }}` IsNewUser indicates if the user is a new user to your platform\n     * @internal\n     */\n    async sendEmailLoginOtp({ email, }) {\n        return this.BaseLogin.sendEmailLoginOtp({\n            email,\n        });\n    }\n    /**\n     * @internal\n     */\n    async sendSmsLoginOtp({ phoneNumber, }) {\n        return this.BaseLogin.sendSmsLoginOtp({\n            phoneNumber,\n        });\n    }\n    /**\n     * Used to verify the otp that the user receives from thirdweb\n     *\n     * See {@link Auth.sendEmailLoginOtp} for how the headless call flow looks like. Simply swap out the calls to `loginWithThirdwebEmailOtp` with `verifyThirdwebEmailLoginOtp`\n     * @param args - props.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * props.otp The code that the user received in their email\n     * @returns `{{user: InitializedUser}}` An InitializedUser object containing the user's status, wallet, authDetails, and more\n     * @internal\n     */\n    async verifyEmailLoginOtp(args) {\n        return this.BaseLogin.verifyEmailLoginOtp(args);\n    }\n    /**\n     * @internal\n     */\n    async verifySmsLoginOtp(args) {\n        return this.BaseLogin.verifySmsLoginOtp(args);\n    }\n    /**\n     * Logs any existing user out of their wallet.\n     * @returns `{{success: boolean}}` true if a user is successfully logged out. false if there's no user currently logged in.\n     * @internal\n     */\n    async logout() {\n        const { success } = await this.AuthQuerier.call({\n            procedureName: \"logout\",\n            params: undefined,\n        });\n        const isRemoveAuthCookie = await this.localStorage.removeAuthCookie();\n        const isRemoveUserId = await this.localStorage.removeWalletUserId();\n        return {\n            success: success || isRemoveAuthCookie || isRemoveUserId,\n        };\n    }\n}\n//# sourceMappingURL=iframe-auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvaWZyYW1lLWF1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1FO0FBQ3ZCO0FBQzVDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscURBQXFEO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsZ0NBQWdDLHdFQUFZO0FBQzVDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSw2QkFBNkIscURBQVM7QUFDdEM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZCQUE2QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsNkNBQTZDO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1QkFBdUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELCtCQUErQjtBQUN2RjtBQUNBO0FBQ0Esa0ZBQWtGLDJCQUEyQjtBQUM3RztBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVCQUF1QixrQ0FBa0MsOEJBQThCO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixnQ0FBZ0M7QUFDOUQ7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELCtCQUErQjtBQUN2RjtBQUNBO0FBQ0EsNkRBQTZELDJCQUEyQjtBQUN4RixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLG9EQUFvRDtBQUNoSSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBLDhCQUE4QixRQUFRO0FBQ3RDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsY0FBYztBQUMxQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw4QkFBOEI7QUFDMUM7QUFDQTtBQUNBLG1CQUFtQix1QkFBdUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixVQUFVO0FBQzFCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvd2ViL2xpYi9hdXRoL2lmcmFtZS1hdXRoLmpzPzYwMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4uLy4uL3V0aWxzL1N0b3JhZ2UvTG9jYWxTdG9yYWdlLmpzXCI7XG5pbXBvcnQgeyBCYXNlTG9naW4gfSBmcm9tIFwiLi9iYXNlLWxvZ2luLmpzXCI7XG4vKipcbiAqXG4gKi9cbmV4cG9ydCBjbGFzcyBBdXRoIHtcbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIG1hbmFnZSB0aGUgdXNlcidzIGF1dGggc3RhdGVzLiBUaGlzIHNob3VsZCBub3QgYmUgaW5zdGFudGlhdGVkIGRpcmVjdGx5LlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHsgY2xpZW50LCBxdWVyaWVyLCBvbkF1dGhTdWNjZXNzLCBlY29zeXN0ZW0sIGJhc2VVcmwsIH0pIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY2xpZW50XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIkF1dGhRdWVyaWVyXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxvY2FsU3RvcmFnZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvbkF1dGhTdWNjZXNzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIkJhc2VMb2dpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5BdXRoUXVlcmllciA9IHF1ZXJpZXI7XG4gICAgICAgIHRoaXMubG9jYWxTdG9yYWdlID0gbmV3IExvY2FsU3RvcmFnZSh7XG4gICAgICAgICAgICBjbGllbnRJZDogY2xpZW50LmNsaWVudElkLFxuICAgICAgICAgICAgZWNvc3lzdGVtSWQ6IGVjb3N5c3RlbT8uaWQsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm9uQXV0aFN1Y2Nlc3MgPSBvbkF1dGhTdWNjZXNzO1xuICAgICAgICB0aGlzLkJhc2VMb2dpbiA9IG5ldyBCYXNlTG9naW4oe1xuICAgICAgICAgICAgcG9zdExvZ2luOiBhc3luYyAocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucG9zdExvZ2luKHJlc3VsdCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHJlTG9naW46IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnByZUxvZ2luKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZWNvc3lzdGVtLFxuICAgICAgICAgICAgcXVlcmllcjogcXVlcmllcixcbiAgICAgICAgICAgIGNsaWVudCxcbiAgICAgICAgICAgIGJhc2VVcmwsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYyBwcmVMb2dpbigpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5sb2dvdXQoKTtcbiAgICB9XG4gICAgYXN5bmMgcG9zdExvZ2luKHsgc3RvcmVkVG9rZW4sIHdhbGxldERldGFpbHMsIH0pIHtcbiAgICAgICAgaWYgKHN0b3JlZFRva2VuLnNob3VsZFN0b3JlQ29va2llU3RyaW5nKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmxvY2FsU3RvcmFnZS5zYXZlQXV0aENvb2tpZShzdG9yZWRUb2tlbi5jb29raWVTdHJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGluaXRpYWxpemVkVXNlciA9IGF3YWl0IHRoaXMub25BdXRoU3VjY2Vzcyh7XG4gICAgICAgICAgICBzdG9yZWRUb2tlbixcbiAgICAgICAgICAgIHdhbGxldERldGFpbHMsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gaW5pdGlhbGl6ZWRVc2VyO1xuICAgIH1cbiAgICBhc3luYyBsb2dpbldpdGhBdXRoVG9rZW4oYXV0aFRva2VuLCByZWNvdmVyeUNvZGUpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcmVMb2dpbigpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLkF1dGhRdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJsb2dpbldpdGhTdG9yZWRUb2tlbkRldGFpbHNcIixcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHN0b3JlZFRva2VuOiBhdXRoVG9rZW4uc3RvcmVkVG9rZW4sXG4gICAgICAgICAgICAgICAgcmVjb3ZlcnlDb2RlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RMb2dpbihyZXN1bHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIGxvZyB0aGUgdXNlciBpbnRvIHRoZWlyIHRoaXJkd2ViIHdhbGxldCBvbiB5b3VyIHBsYXRmb3JtIHZpYSBhIG15cmlhZCBvZiBhdXRoIHByb3ZpZGVyc1xuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IHRoaXJkd2ViSW5BcHBXYWxsZXQgPSBuZXcgSW5BcHBXYWxsZXRTZGsoe2NsaWVudElkOiBcIllPVVJfQ0xJRU5UX0lEXCIsIGNoYWluOiBcIlBvbHlnb25cIn0pXG4gICAgICogdHJ5IHtcbiAgICAgKiAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlyZHdlYkluQXBwV2FsbGV0LmF1dGgubG9naW5XaXRoTW9kYWwoKTtcbiAgICAgKiAgIC8vIHVzZXIgaXMgbm93IGxvZ2dlZCBpblxuICAgICAqIH0gY2F0Y2ggKGUpIHtcbiAgICAgKiAgIC8vIFVzZXIgY2xvc2VkIG1vZGFsIG9yIHNvbWV0aGluZyBlbHNlIHdlbnQgd3JvbmcgZHVyaW5nIHRoZSBhdXRoZW50aWNhdGlvbiBwcm9jZXNzXG4gICAgICogICBjb25zb2xlLmVycm9yKGUpXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqIEByZXR1cm5zIGB7e3VzZXI6IEluaXRpYWxpemVkVXNlcn19YCBBbiBJbml0aWFsaXplZFVzZXIgb2JqZWN0LlxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luV2l0aE1vZGFsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5CYXNlTG9naW4ubG9naW5XaXRoTW9kYWwoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlZCB0byBsb2cgdGhlIHVzZXIgaW50byB0aGVpciB0aGlyZHdlYiB3YWxsZXQgdXNpbmcgZW1haWwgT1RQXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogIC8vIEJhc2ljIEZsb3dcbiAgICAgKiAgY29uc3QgdGhpcmR3ZWJJbkFwcFdhbGxldCA9IG5ldyBJbkFwcFdhbGxldFNkayh7Y2xpZW50SWQ6IFwiXCIsIGNoYWluOiBcIlBvbHlnb25cIn0pO1xuICAgICAqICB0cnkge1xuICAgICAqICAgIC8vIHByb21wdHMgdXNlciB0byBlbnRlciB0aGUgY29kZSB0aGV5IHJlY2VpdmVkXG4gICAgICogICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXJkd2ViSW5BcHBXYWxsZXQuYXV0aC5sb2dpbldpdGhUaGlyZHdlYkVtYWlsT3RwKHsgZW1haWwgOiBcInlvdUBleGFtcGxlLmNvbVwiIH0pO1xuICAgICAqICAgIC8vIHVzZXIgaXMgbm93IGxvZ2dlZCBpblxuICAgICAqICB9IGNhdGNoIChlKSB7XG4gICAgICogICAgLy8gVXNlciBjbG9zZWQgdGhlIE9UUCBtb2RhbCBvciBzb21ldGhpbmcgZWxzZSB3ZW50IHdyb25nIGR1cmluZyB0aGUgYXV0aGVudGljYXRpb24gcHJvY2Vzc1xuICAgICAqICAgIGNvbnNvbGUuZXJyb3IoZSlcbiAgICAgKiAgfVxuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSBhcmdzIC0gYXJncy5lbWFpbDogV2Ugd2lsbCBzZW5kIHRoZSBlbWFpbCBhbiBPVFAgdGhhdCBuZWVkcyB0byBiZSBlbnRlcmVkIGluIG9yZGVyIGZvciB0aGVtIHRvIGJlIGxvZ2dlZCBpbi5cbiAgICAgKiBAcmV0dXJucyBge3t1c2VyOiBJbml0aWFsaXplZFVzZXJ9fWAgQW4gSW5pdGlhbGl6ZWRVc2VyIG9iamVjdC4gU2VlIHtAbGluayBJbkFwcFdhbGxldFNkay5nZXRVc2VyfSBmb3IgbW9yZVxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luV2l0aEVtYWlsT3RwKGFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQmFzZUxvZ2luLmxvZ2luV2l0aEVtYWlsT3RwKGFyZ3MpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBsb2dpbldpdGhDdXN0b21Kd3QoYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5CYXNlTG9naW4ubG9naW5XaXRoQ3VzdG9tSnd0KGFyZ3MpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBsb2dpbldpdGhDdXN0b21BdXRoRW5kcG9pbnQoYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5CYXNlTG9naW4ubG9naW5XaXRoQ3VzdG9tQXV0aEVuZHBvaW50KGFyZ3MpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBsb2dpbldpdGhPYXV0aChhcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLkJhc2VMb2dpbi5sb2dpbldpdGhPYXV0aChhcmdzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSBoZWFkbGVzcyB3YXkgdG8gc2VuZCB0aGUgdXNlcnMgYXQgdGhlIHBhc3NlZCBlbWFpbCBhbiBPVFAgY29kZS5cbiAgICAgKiBZb3UgbmVlZCB0byB0aGVuIGNhbGwge0BsaW5rIEF1dGgudmVyaWZ5RW1haWxMb2dpbk90cH0gaW4gb3JkZXIgdG8gY29tcGxldGUgdGhlIGxvZ2luIHByb2Nlc3NcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIEBwYXJhbSBwYXJhbTAuZW1haWxcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogIGNvbnN0IHRoaXJkd2ViSW5BcHBXYWxsZXQgPSBuZXcgSW5BcHBXYWxsZXRTZGsoe2NsaWVudElkOiBcIlwiLCBjaGFpbjogXCJQb2x5Z29uXCJ9KTtcbiAgICAgKiAgLy8gc2VuZHMgdXNlciBhbiBPVFAgY29kZVxuICAgICAqIHRyeSB7XG4gICAgICogICAgYXdhaXQgdGhpcmR3ZWJJbkFwcFdhbGxldC5hdXRoLnNlbmRFbWFpbExvZ2luT3RwKHsgZW1haWwgOiBcInlvdUBleGFtcGxlLmNvbVwiIH0pO1xuICAgICAqIH0gY2F0Y2goZSkge1xuICAgICAqICAgIC8vIEVycm9yIFNlbmRpbmcgdXNlcidzIGVtYWlsIGFuIE9UUCBjb2RlXG4gICAgICogICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiAvLyBUaGVuIHdoZW4geW91ciB1c2VyIGlzIHJlYWR5IHRvIHZlcmlmeSB0aGVpciBPVFBcbiAgICAgKiB0cnkge1xuICAgICAqICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlyZHdlYkluQXBwV2FsbGV0LmF1dGgudmVyaWZ5RW1haWxMb2dpbk90cCh7IGVtYWlsOiBcInlvdUBleGFtcGxlLmNvbVwiLCBvdHA6IFwiNi1ESUdJVF9DT0RFX0hFUkVcIiB9KTtcbiAgICAgKiB9IGNhdGNoKGUpIHtcbiAgICAgKiAgICAvLyBFcnJvciB2ZXJpZnlpbmcgdGhlIE9UUCBjb2RlXG4gICAgICogICAgY29uc29sZS5lcnJvcihlKVxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gcGFyYW0wIC0gcGFyYW0wLmVtYWlsIFdlIHdpbGwgc2VuZCB0aGUgZW1haWwgYW4gT1RQIHRoYXQgbmVlZHMgdG8gYmUgZW50ZXJlZCBpbiBvcmRlciBmb3IgdGhlbSB0byBiZSBsb2dnZWQgaW4uXG4gICAgICogQHJldHVybnMgYHt7IGlzTmV3VXNlcjogYm9vbGVhbiB9fWAgSXNOZXdVc2VyIGluZGljYXRlcyBpZiB0aGUgdXNlciBpcyBhIG5ldyB1c2VyIHRvIHlvdXIgcGxhdGZvcm1cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kRW1haWxMb2dpbk90cCh7IGVtYWlsLCB9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkJhc2VMb2dpbi5zZW5kRW1haWxMb2dpbk90cCh7XG4gICAgICAgICAgICBlbWFpbCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIHNlbmRTbXNMb2dpbk90cCh7IHBob25lTnVtYmVyLCB9KSB7XG4gICAgICAgIHJldHVybiB0aGlzLkJhc2VMb2dpbi5zZW5kU21zTG9naW5PdHAoe1xuICAgICAgICAgICAgcGhvbmVOdW1iZXIsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIHZlcmlmeSB0aGUgb3RwIHRoYXQgdGhlIHVzZXIgcmVjZWl2ZXMgZnJvbSB0aGlyZHdlYlxuICAgICAqXG4gICAgICogU2VlIHtAbGluayBBdXRoLnNlbmRFbWFpbExvZ2luT3RwfSBmb3IgaG93IHRoZSBoZWFkbGVzcyBjYWxsIGZsb3cgbG9va3MgbGlrZS4gU2ltcGx5IHN3YXAgb3V0IHRoZSBjYWxscyB0byBgbG9naW5XaXRoVGhpcmR3ZWJFbWFpbE90cGAgd2l0aCBgdmVyaWZ5VGhpcmR3ZWJFbWFpbExvZ2luT3RwYFxuICAgICAqIEBwYXJhbSBhcmdzIC0gcHJvcHMuZW1haWwgV2Ugd2lsbCBzZW5kIHRoZSBlbWFpbCBhbiBPVFAgdGhhdCBuZWVkcyB0byBiZSBlbnRlcmVkIGluIG9yZGVyIGZvciB0aGVtIHRvIGJlIGxvZ2dlZCBpbi5cbiAgICAgKiBwcm9wcy5vdHAgVGhlIGNvZGUgdGhhdCB0aGUgdXNlciByZWNlaXZlZCBpbiB0aGVpciBlbWFpbFxuICAgICAqIEByZXR1cm5zIGB7e3VzZXI6IEluaXRpYWxpemVkVXNlcn19YCBBbiBJbml0aWFsaXplZFVzZXIgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHVzZXIncyBzdGF0dXMsIHdhbGxldCwgYXV0aERldGFpbHMsIGFuZCBtb3JlXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgdmVyaWZ5RW1haWxMb2dpbk90cChhcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLkJhc2VMb2dpbi52ZXJpZnlFbWFpbExvZ2luT3RwKGFyZ3MpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyB2ZXJpZnlTbXNMb2dpbk90cChhcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLkJhc2VMb2dpbi52ZXJpZnlTbXNMb2dpbk90cChhcmdzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTG9ncyBhbnkgZXhpc3RpbmcgdXNlciBvdXQgb2YgdGhlaXIgd2FsbGV0LlxuICAgICAqIEByZXR1cm5zIGB7e3N1Y2Nlc3M6IGJvb2xlYW59fWAgdHJ1ZSBpZiBhIHVzZXIgaXMgc3VjY2Vzc2Z1bGx5IGxvZ2dlZCBvdXQuIGZhbHNlIGlmIHRoZXJlJ3Mgbm8gdXNlciBjdXJyZW50bHkgbG9nZ2VkIGluLlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ291dCgpIHtcbiAgICAgICAgY29uc3QgeyBzdWNjZXNzIH0gPSBhd2FpdCB0aGlzLkF1dGhRdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJsb2dvdXRcIixcbiAgICAgICAgICAgIHBhcmFtczogdW5kZWZpbmVkLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgaXNSZW1vdmVBdXRoQ29va2llID0gYXdhaXQgdGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlQXV0aENvb2tpZSgpO1xuICAgICAgICBjb25zdCBpc1JlbW92ZVVzZXJJZCA9IGF3YWl0IHRoaXMubG9jYWxTdG9yYWdlLnJlbW92ZVdhbGxldFVzZXJJZCgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3VjY2Vzczogc3VjY2VzcyB8fCBpc1JlbW92ZUF1dGhDb29raWUgfHwgaXNSZW1vdmVVc2VySWQsXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWZyYW1lLWF1dGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IFrameWallet: function() { return /* binding */ IFrameWallet; }\n/* harmony export */ });\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../rpc/actions/eth_sendRawTransaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../rpc/rpc.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_signatures_helpers_parseTypedData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../utils/signatures/helpers/parseTypedData.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js\");\n/* harmony import */ var _ecosystem_get_ecosystem_partner_permissions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ecosystem/get-ecosystem-partner-permissions.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/ecosystem/get-ecosystem-partner-permissions.js\");\n/* harmony import */ var _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/authentication/type.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/type.js\");\n/* harmony import */ var _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n *\n */\nclass IFrameWallet {\n    /**\n     * Not meant to be initialized directly. Call {@link initializeUser} to get an instance\n     * @internal\n     */\n    constructor({ client, ecosystem, querier, }) {\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"walletManagerQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.ecosystem = ecosystem;\n        this.walletManagerQuerier = querier;\n        this.localStorage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_0__.LocalStorage({\n            clientId: client.clientId,\n            ecosystemId: ecosystem?.id,\n        });\n    }\n    /**\n     * Used to set-up the user device in the case that they are using incognito\n     * @returns `{walletAddress : string }` The user's wallet details\n     * @internal\n     */\n    async postWalletSetUp({ deviceShareStored, walletAddress, isIframeStorageEnabled, walletUserId, }) {\n        if (!isIframeStorageEnabled) {\n            await this.localStorage.saveDeviceShare(deviceShareStored, walletUserId);\n        }\n        return { walletAddress };\n    }\n    /**\n     * Gets the various status states of the user\n     * @example\n     * ```typescript\n     *  const userStatus = await Paper.getUserWalletStatus();\n     *  switch (userStatus.status) {\n     *  case UserWalletStatus.LOGGED_OUT: {\n     *    // User is logged out, call one of the auth methods on Paper.auth to authenticate the user\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED: {\n     *    // User is logged in, but does not have a wallet associated with it\n     *    // you also have access to the user's details\n     *    userStatus.user.authDetails;\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_NEW_DEVICE: {\n     *    // User is logged in and created a wallet already, but is missing the device shard\n     *    // You have access to:\n     *    userStatus.user.authDetails;\n     *    userStatus.user.walletAddress;\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n     *    // user is logged in and wallet is all set up.\n     *    // You have access to:\n     *    userStatus.user.authDetails;\n     *    userStatus.user.walletAddress;\n     *    userStatus.user.wallet;\n     *    break;\n     *  }\n     *}\n     *```\n     * @returns `{GetUserWalletStatusFnReturnType}` an object to containing various information on the user statuses\n     * @internal\n     */\n    async getUserWalletStatus() {\n        const userStatus = await this.walletManagerQuerier.call({\n            procedureName: \"getUserStatus\",\n            params: undefined,\n        });\n        if (userStatus.status === _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED) {\n            return {\n                status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n                ...userStatus.user,\n                account: await this.getAccount(),\n            };\n        }\n        if (userStatus.status === _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.UserWalletStatus.LOGGED_IN_NEW_DEVICE) {\n            return {\n                status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n                ...userStatus.user,\n            };\n        }\n        if (userStatus.status === _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED) {\n            return {\n                status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n                ...userStatus.user,\n            };\n        }\n        // Logged out\n        return { status: userStatus.status };\n    }\n    /**\n     * Returns an account that communicates with the iFrame for signing operations\n     * @internal\n     */\n    async getAccount() {\n        const querier = this\n            .walletManagerQuerier;\n        const client = this.client;\n        const partnerId = this.ecosystem?.partnerId;\n        const isEcosystem = !!this.ecosystem;\n        const permissions = this.ecosystem?.partnerId\n            ? await (0,_ecosystem_get_ecosystem_partner_permissions_js__WEBPACK_IMPORTED_MODULE_2__.getEcosystemPartnerPermissions)(this.ecosystem.id, this.ecosystem?.partnerId)\n            : undefined;\n        const { address } = await querier.call({\n            procedureName: \"getAddress\",\n            params: undefined,\n        });\n        const _signTransaction = async (tx) => {\n            // biome-ignore lint/suspicious/noExplicitAny: ethers tx transformation\n            const transaction = {\n                to: tx.to ?? undefined,\n                data: tx.data,\n                value: tx.value,\n                gasLimit: tx.gas,\n                nonce: tx.nonce,\n                chainId: tx.chainId,\n            };\n            if (tx.maxFeePerGas) {\n                // ethers (in the iframe) rejects any type 0 trasaction with unknown keys\n                // TODO remove this once iframe is upgraded to v5\n                transaction.accessList = tx.accessList;\n                transaction.maxFeePerGas = tx.maxFeePerGas;\n                transaction.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n                transaction.type = 2;\n            }\n            else {\n                transaction.gasPrice = tx.gasPrice;\n                transaction.type = 0;\n            }\n            const RPC_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_3__.getThirdwebDomains)().rpc;\n            const { signedTransaction } = await querier.call({\n                procedureName: \"signTransaction\",\n                params: {\n                    transaction,\n                    chainId: tx.chainId,\n                    partnerId,\n                    rpcEndpoint: `https://${tx.chainId}.${RPC_URL}`, // TODO (ew) shouldnt be needed\n                },\n                // Can hide the iframe if the partner has full control (no user approvals)\n                showIframe: permissions?.permissions.includes(\"FULL_CONTROL_V1\")\n                    ? false\n                    : isEcosystem,\n            });\n            return signedTransaction;\n        };\n        return {\n            address: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_4__.getAddress)(address),\n            async signTransaction(tx) {\n                if (!tx.chainId) {\n                    throw new Error(\"chainId required in tx to sign\");\n                }\n                return _signTransaction({\n                    ...tx,\n                    chainId: tx.chainId,\n                });\n            },\n            async sendTransaction(tx) {\n                const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_5__.getRpcClient)({\n                    client,\n                    chain: (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_6__.getCachedChain)(tx.chainId),\n                });\n                const signedTx = await _signTransaction(tx);\n                const transactionHash = await (0,_rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_7__.eth_sendRawTransaction)(rpcRequest, signedTx);\n                return {\n                    transactionHash,\n                };\n            },\n            async signMessage({ message }) {\n                // in-app wallets use ethers to sign messages, which always expects a string (or bytes maybe but string is safest)\n                const messageDecoded = (() => {\n                    if (typeof message === \"string\") {\n                        return message;\n                    }\n                    if (message.raw instanceof Uint8Array) {\n                        return message.raw;\n                    }\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_8__.hexToString)(message.raw);\n                })();\n                const { signedMessage } = await querier.call({\n                    procedureName: \"signMessage\",\n                    params: {\n                        // biome-ignore lint/suspicious/noExplicitAny: ethers tx transformation\n                        message: messageDecoded, // needs bytes or string\n                        partnerId,\n                        chainId: 1, // TODO check if we need this\n                    },\n                    // Can hide the iframe if the partner has full control (no user approvals)\n                    showIframe: permissions?.permissions.includes(\"FULL_CONTROL_V1\")\n                        ? false\n                        : isEcosystem,\n                });\n                return signedMessage;\n            },\n            async signTypedData(_typedData) {\n                const parsedTypedData = (0,_utils_signatures_helpers_parseTypedData_js__WEBPACK_IMPORTED_MODULE_9__.parseTypedData)(_typedData);\n                // deleting EIP712 Domain as it results in ambiguous primary type on some cases\n                // this happens when going from viem to ethers via the iframe\n                if (parsedTypedData.types?.EIP712Domain) {\n                    parsedTypedData.types.EIP712Domain = undefined;\n                }\n                const domain = parsedTypedData.domain;\n                const chainId = domain?.chainId;\n                const domainData = {\n                    verifyingContract: domain?.verifyingContract,\n                    name: domain?.name,\n                    version: domain?.version,\n                };\n                // chain id can't be included if it wasn't explicitly specified\n                if (chainId) {\n                    domainData.chainId = chainId;\n                }\n                const RPC_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_3__.getThirdwebDomains)().rpc;\n                const { signedTypedData } = await querier.call({\n                    procedureName: \"signTypedDataV4\",\n                    params: {\n                        domain: domainData,\n                        types: parsedTypedData.types,\n                        message: parsedTypedData.message,\n                        chainId: chainId || 1,\n                        partnerId,\n                        rpcEndpoint: `https://${chainId}.${RPC_URL}`, // TODO (ew) shouldnt be needed\n                    },\n                    // Can hide the iframe if the partner has full control (no user approvals)\n                    showIframe: permissions?.permissions.includes(\"FULL_CONTROL_V1\")\n                        ? false\n                        : isEcosystem,\n                });\n                return signedTypedData;\n            },\n        };\n    }\n}\n//# sourceMappingURL=in-app-account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InAppWebConnector: function() { return /* binding */ InAppWebConnector; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/authentication/type.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/type.js\");\n/* harmony import */ var _utils_iFrameCommunication_InAppWalletIframeCommunicator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/iFrameCommunication/InAppWalletIframeCommunicator.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js\");\n/* harmony import */ var _auth_iframe_auth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth/iframe-auth.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js\");\n/* harmony import */ var _auth_oauth_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/oauth.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/oauth.js\");\n/* harmony import */ var _auth_passkeys_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth/passkeys.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/passkeys.js\");\n/* harmony import */ var _in_app_account_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./in-app-account.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js\");\n\n\n\n\n\n\n\n/**\n * @internal\n */\nclass InAppWebConnector {\n    isClientIdLegacyPaper(clientId) {\n        if (clientId.indexOf(\"-\") > 0 && clientId.length === 36) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @example\n     * `const thirdwebInAppWallet = new InAppWalletSdk({ clientId: \"\", chain: \"Goerli\" });`\n     * @internal\n     */\n    constructor({ client, onAuthSuccess, ecosystem, }) {\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"querier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wallet\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Used to manage the Auth state of the user.\n         */\n        Object.defineProperty(this, \"auth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.isClientIdLegacyPaper(client.clientId)) {\n            throw new Error(\"You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page\");\n        }\n        const baseUrl = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebBaseUrl)(\"inAppWallet\");\n        this.client = client;\n        this.querier = new _utils_iFrameCommunication_InAppWalletIframeCommunicator_js__WEBPACK_IMPORTED_MODULE_1__.InAppWalletIframeCommunicator({\n            clientId: client.clientId,\n            ecosystem,\n            baseUrl,\n        });\n        this.wallet = new _in_app_account_js__WEBPACK_IMPORTED_MODULE_2__.IFrameWallet({\n            client,\n            ecosystem,\n            querier: this.querier,\n        });\n        this.auth = new _auth_iframe_auth_js__WEBPACK_IMPORTED_MODULE_3__.Auth({\n            client,\n            querier: this.querier,\n            baseUrl,\n            ecosystem,\n            onAuthSuccess: async (authResult) => {\n                onAuthSuccess?.(authResult);\n                await this.wallet.postWalletSetUp({\n                    ...authResult.walletDetails,\n                    walletUserId: authResult.storedToken.authDetails.userWalletId,\n                });\n                await this.querier.call({\n                    procedureName: \"initIframe\",\n                    params: {\n                        partnerId: ecosystem?.partnerId,\n                        ecosystemId: ecosystem?.id,\n                        deviceShareStored: authResult.walletDetails.deviceShareStored,\n                        clientId: this.client.clientId,\n                        walletUserId: authResult.storedToken.authDetails.userWalletId,\n                        authCookie: authResult.storedToken.cookieString,\n                    },\n                });\n                return {\n                    user: {\n                        status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_4__.UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n                        authDetails: authResult.storedToken.authDetails,\n                        account: await this.wallet.getAccount(),\n                        walletAddress: authResult.walletDetails.walletAddress,\n                    },\n                };\n            },\n        });\n    }\n    /**\n     * Gets the usr if they are logged in\n     * @example\n     * ```js\n     *  const user = await thirdwebInAppWallet.getUser();\n     *  switch (user.status) {\n     *     case UserWalletStatus.LOGGED_OUT: {\n     *       // User is logged out, call one of the auth methods on thirdwebInAppWallet.auth to authenticate the user\n     *       break;\n     *     }\n     *     case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n     *       // user is logged in and wallet is all set up.\n     *       // You have access to:\n     *       user.status;\n     *       user.authDetails;\n     *       user.walletAddress;\n     *       user.wallet;\n     *       break;\n     *     }\n     * }\n     * ```\n     * @returns GetUser - an object to containing various information on the user statuses\n     */\n    async getUser() {\n        return this.wallet.getUserWalletStatus();\n    }\n    getAccount() {\n        return this.wallet.getAccount();\n    }\n    async preAuthenticate(args) {\n        const strategy = args.strategy;\n        switch (strategy) {\n            case \"email\": {\n                return this.auth.sendEmailLoginOtp({ email: args.email });\n            }\n            case \"phone\": {\n                return this.auth.sendSmsLoginOtp({ phoneNumber: args.phoneNumber });\n            }\n            default:\n                assertUnreachable(strategy, `Provider: ${strategy} doesn't require pre-authentication`);\n        }\n    }\n    authenticateWithRedirect(strategy) {\n        (0,_auth_oauth_js__WEBPACK_IMPORTED_MODULE_5__.loginWithOauthRedirect)({\n            authOption: strategy,\n            client: this.wallet.client,\n            ecosystem: this.wallet.ecosystem,\n        });\n    }\n    async loginWithAuthToken(authResult) {\n        return this.auth.loginWithAuthToken(authResult);\n    }\n    async authenticate(args) {\n        const strategy = args.strategy;\n        switch (strategy) {\n            case \"email\": {\n                return await this.auth.verifyEmailLoginOtp({\n                    email: args.email,\n                    otp: args.verificationCode,\n                });\n            }\n            case \"phone\": {\n                return await this.auth.verifySmsLoginOtp({\n                    otp: args.verificationCode,\n                    phoneNumber: args.phoneNumber,\n                });\n            }\n            case \"jwt\": {\n                return this.auth.loginWithCustomJwt({\n                    jwt: args.jwt,\n                    encryptionKey: args.encryptionKey,\n                });\n            }\n            case \"auth_endpoint\": {\n                return this.auth.loginWithCustomAuthEndpoint({\n                    payload: args.payload,\n                    encryptionKey: args.encryptionKey,\n                });\n            }\n            case \"iframe_email_verification\": {\n                return this.auth.loginWithEmailOtp({\n                    email: args.email,\n                });\n            }\n            case \"iframe\": {\n                return this.auth.loginWithModal();\n            }\n            case \"passkey\": {\n                if (args.type === \"sign-up\") {\n                    const authToken = await (0,_auth_passkeys_js__WEBPACK_IMPORTED_MODULE_6__.registerPasskey)({\n                        client: this.wallet.client,\n                        ecosystem: this.wallet.ecosystem,\n                        authenticatorType: args.authenticatorType,\n                        username: args.passkeyName,\n                    });\n                    return this.loginWithAuthToken(authToken);\n                }\n                const authToken = await (0,_auth_passkeys_js__WEBPACK_IMPORTED_MODULE_6__.loginWithPasskey)({\n                    client: this.wallet.client,\n                    ecosystem: this.wallet.ecosystem,\n                    authenticatorType: args.authenticatorType,\n                });\n                return this.loginWithAuthToken(authToken);\n            }\n            case \"apple\":\n            case \"facebook\":\n            case \"google\":\n            case \"farcaster\":\n            case \"telegram\":\n            case \"discord\": {\n                const authToken = await (0,_auth_oauth_js__WEBPACK_IMPORTED_MODULE_5__.loginWithOauth)({\n                    authOption: strategy,\n                    client: this.wallet.client,\n                    ecosystem: this.wallet.ecosystem,\n                    closeOpenedWindow: args.closeOpenedWindow,\n                    openedWindow: args.openedWindow,\n                });\n                return this.loginWithAuthToken(authToken);\n            }\n            default:\n                assertUnreachable(strategy);\n        }\n    }\n    async logout() {\n        return await this.auth.logout();\n    }\n}\nfunction assertUnreachable(x, message) {\n    throw new Error(message ?? `Invalid param: ${x}`);\n}\n//# sourceMappingURL=web-connector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IframeCommunicator: function() { return /* binding */ IframeCommunicator; }\n/* harmony export */ });\nfunction sleep(seconds) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, seconds * 1000);\n    });\n}\nconst iframeBaseStyle = {\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    colorScheme: \"light\",\n    position: \"fixed\",\n    top: \"0px\",\n    right: \"0px\",\n    zIndex: \"2147483646\",\n    display: \"none\",\n};\n// Global var to help track iframe state\nconst isIframeLoaded = new Map();\n/**\n * @internal\n */\n// biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\nclass IframeCommunicator {\n    /**\n     * @internal\n     */\n    constructor({ link, baseUrl, iframeId, container = document.body, onIframeInitialize, }) {\n        Object.defineProperty(this, \"iframe\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"POLLING_INTERVAL_SECONDS\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1.4\n        });\n        Object.defineProperty(this, \"iframeBaseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.iframeBaseUrl = baseUrl;\n        // Creating the IFrame element for communication\n        let iframe = document.getElementById(iframeId);\n        const hrefLink = new URL(link);\n        // TODO (ew) - bring back version tracking\n        // const sdkVersion = process.env.THIRDWEB_EWS_SDK_VERSION;\n        // if (!sdkVersion) {\n        //   throw new Error(\"Missing THIRDWEB_EWS_SDK_VERSION env var\");\n        // }\n        // hrefLink.searchParams.set(\"sdkVersion\", sdkVersion);\n        if (!iframe || iframe.src !== hrefLink.href) {\n            // ! Do not update the hrefLink here or it'll cause multiple re-renders\n            iframe = document.createElement(\"iframe\");\n            const mergedIframeStyles = {\n                ...iframeBaseStyle,\n            };\n            Object.assign(iframe.style, mergedIframeStyles);\n            iframe.setAttribute(\"id\", iframeId);\n            iframe.setAttribute(\"fetchpriority\", \"high\");\n            container.appendChild(iframe);\n            iframe.src = hrefLink.href;\n            // iframe.setAttribute(\"data-version\", sdkVersion);\n            // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n            const onIframeLoaded = (event) => {\n                if (event.data.eventType === \"ewsIframeLoaded\") {\n                    window.removeEventListener(\"message\", onIframeLoaded);\n                    if (!iframe) {\n                        console.warn(\"thirdweb iFrame not found\");\n                        return;\n                    }\n                    this.onIframeLoadHandler(iframe, onIframeInitialize)();\n                }\n            };\n            window.addEventListener(\"message\", onIframeLoaded);\n        }\n        this.iframe = iframe;\n    }\n    // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n    async onIframeLoadedInitVariables() {\n        return {};\n    }\n    /**\n     * @internal\n     */\n    onIframeLoadHandler(iframe, onIframeInitialize) {\n        return async () => {\n            const channel = new MessageChannel();\n            const promise = new Promise((res, rej) => {\n                // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n                channel.port1.onmessage = (event) => {\n                    const { data } = event;\n                    channel.port1.close();\n                    if (!data.success) {\n                        rej(new Error(data.error));\n                    }\n                    isIframeLoaded.set(iframe.src, true);\n                    if (onIframeInitialize) {\n                        onIframeInitialize();\n                    }\n                    res(true);\n                };\n            });\n            const INIT_IFRAME_EVENT = \"initIframe\";\n            iframe?.contentWindow?.postMessage(\n            // ? We initialise the iframe with a bunch\n            // of useful information so that we don't have to pass it\n            // through in each of the future call. This would be where we do it.\n            {\n                eventType: INIT_IFRAME_EVENT,\n                data: await this.onIframeLoadedInitVariables(),\n            }, this.iframeBaseUrl, [channel.port2]);\n            await promise;\n        };\n    }\n    /**\n     * @internal\n     */\n    async call({ procedureName, params, showIframe = false, }) {\n        while (!isIframeLoaded.get(this.iframe.src)) {\n            await sleep(this.POLLING_INTERVAL_SECONDS);\n        }\n        if (showIframe) {\n            this.iframe.style.display = \"block\";\n            // magic number to let the display render before performing the animation of the modal in\n            await sleep(0.005);\n        }\n        const channel = new MessageChannel();\n        const promise = new Promise((res, rej) => {\n            // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n            channel.port1.onmessage = async (event) => {\n                const { data } = event;\n                channel.port1.close();\n                if (showIframe) {\n                    // magic number to let modal fade out before hiding it\n                    await sleep(0.1);\n                    this.iframe.style.display = \"none\";\n                }\n                if (!data.success) {\n                    rej(new Error(data.error));\n                }\n                else {\n                    res(data.data);\n                }\n            };\n        });\n        this.iframe.contentWindow?.postMessage({ eventType: procedureName, data: params }, this.iframeBaseUrl, [channel.port2]);\n        return promise;\n    }\n    /**\n     * This has to be called by any iframe that will be removed from the DOM.\n     * Use to make sure that we reset the global loaded state of the particular iframe.src\n     * @internal\n     */\n    destroy() {\n        isIframeLoaded.delete(this.iframe.src);\n    }\n}\n//# sourceMappingURL=IframeCommunicator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IN_APP_WALLET_IFRAME_ID: function() { return /* binding */ IN_APP_WALLET_IFRAME_ID; },\n/* harmony export */   InAppWalletIframeCommunicator: function() { return /* binding */ InAppWalletIframeCommunicator; },\n/* harmony export */   createInAppWalletIframeLink: function() { return /* binding */ createInAppWalletIframeLink; }\n/* harmony export */ });\n/* harmony import */ var _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/constants/settings.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js\");\n/* harmony import */ var _Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n/* harmony import */ var _IframeCommunicator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IframeCommunicator.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js\");\n\n\n\n/**\n * @internal\n */\nclass InAppWalletIframeCommunicator extends _IframeCommunicator_js__WEBPACK_IMPORTED_MODULE_0__.IframeCommunicator {\n    /**\n     * @internal\n     */\n    constructor({ clientId, baseUrl, ecosystem, }) {\n        super({\n            iframeId: IN_APP_WALLET_IFRAME_ID + (ecosystem?.id || \"\"),\n            link: createInAppWalletIframeLink({\n                clientId,\n                path: _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_1__.IN_APP_WALLET_PATH,\n                ecosystem,\n                baseUrl,\n            }).href,\n            baseUrl,\n            container: document.body,\n        });\n        Object.defineProperty(this, \"clientId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.clientId = clientId;\n        this.ecosystem = ecosystem;\n    }\n    /**\n     * @internal\n     */\n    async onIframeLoadedInitVariables() {\n        const localStorage = new _Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_2__.LocalStorage({\n            clientId: this.clientId,\n            ecosystemId: this.ecosystem?.id,\n        });\n        return {\n            authCookie: await localStorage.getAuthCookie(),\n            deviceShareStored: await localStorage.getDeviceShare(),\n            walletUserId: await localStorage.getWalletUserId(),\n            clientId: this.clientId,\n            partnerId: this.ecosystem?.partnerId,\n            ecosystemId: this.ecosystem?.id,\n        };\n    }\n}\n// This is the URL and ID tag of the iFrame that we communicate with\n/**\n * @internal\n */\nfunction createInAppWalletIframeLink({ clientId, baseUrl, path, ecosystem, queryParams, }) {\n    const inAppWalletUrl = new URL(`${path}`, baseUrl);\n    if (queryParams) {\n        for (const queryKey of Object.keys(queryParams)) {\n            inAppWalletUrl.searchParams.set(queryKey, queryParams[queryKey]?.toString() || \"\");\n        }\n    }\n    inAppWalletUrl.searchParams.set(\"clientId\", clientId);\n    if (ecosystem?.partnerId !== undefined) {\n        inAppWalletUrl.searchParams.set(\"partnerId\", ecosystem.partnerId);\n    }\n    if (ecosystem?.id !== undefined) {\n        inAppWalletUrl.searchParams.set(\"ecosystemId\", ecosystem.id);\n    }\n    return inAppWalletUrl;\n}\nconst IN_APP_WALLET_IFRAME_ID = \"thirdweb-in-app-wallet-iframe\";\n//# sourceMappingURL=InAppWalletIframeCommunicator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvdXRpbHMvaUZyYW1lQ29tbXVuaWNhdGlvbi9JbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUU7QUFDZjtBQUNHO0FBQzdEO0FBQ0E7QUFDQTtBQUNPLDRDQUE0QyxzRUFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLCtCQUErQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyRUFBa0I7QUFDeEM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxrRUFBWTtBQUM3QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1Q0FBdUMsa0RBQWtEO0FBQ2hHLHNDQUFzQyxLQUFLO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvdXRpbHMvaUZyYW1lQ29tbXVuaWNhdGlvbi9JbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvci5qcz9jNDFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOX0FQUF9XQUxMRVRfUEFUSCB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL2NvbnN0YW50cy9zZXR0aW5ncy5qc1wiO1xuaW1wb3J0IHsgTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4uL1N0b3JhZ2UvTG9jYWxTdG9yYWdlLmpzXCI7XG5pbXBvcnQgeyBJZnJhbWVDb21tdW5pY2F0b3IgfSBmcm9tIFwiLi9JZnJhbWVDb21tdW5pY2F0b3IuanNcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBJbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvciBleHRlbmRzIElmcmFtZUNvbW11bmljYXRvciB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoeyBjbGllbnRJZCwgYmFzZVVybCwgZWNvc3lzdGVtLCB9KSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGlmcmFtZUlkOiBJTl9BUFBfV0FMTEVUX0lGUkFNRV9JRCArIChlY29zeXN0ZW0/LmlkIHx8IFwiXCIpLFxuICAgICAgICAgICAgbGluazogY3JlYXRlSW5BcHBXYWxsZXRJZnJhbWVMaW5rKHtcbiAgICAgICAgICAgICAgICBjbGllbnRJZCxcbiAgICAgICAgICAgICAgICBwYXRoOiBJTl9BUFBfV0FMTEVUX1BBVEgsXG4gICAgICAgICAgICAgICAgZWNvc3lzdGVtLFxuICAgICAgICAgICAgICAgIGJhc2VVcmwsXG4gICAgICAgICAgICB9KS5ocmVmLFxuICAgICAgICAgICAgYmFzZVVybCxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogZG9jdW1lbnQuYm9keSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNsaWVudElkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVjb3N5c3RlbVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XG4gICAgICAgIHRoaXMuZWNvc3lzdGVtID0gZWNvc3lzdGVtO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBvbklmcmFtZUxvYWRlZEluaXRWYXJpYWJsZXMoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsU3RvcmFnZSA9IG5ldyBMb2NhbFN0b3JhZ2Uoe1xuICAgICAgICAgICAgY2xpZW50SWQ6IHRoaXMuY2xpZW50SWQsXG4gICAgICAgICAgICBlY29zeXN0ZW1JZDogdGhpcy5lY29zeXN0ZW0/LmlkLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGF1dGhDb29raWU6IGF3YWl0IGxvY2FsU3RvcmFnZS5nZXRBdXRoQ29va2llKCksXG4gICAgICAgICAgICBkZXZpY2VTaGFyZVN0b3JlZDogYXdhaXQgbG9jYWxTdG9yYWdlLmdldERldmljZVNoYXJlKCksXG4gICAgICAgICAgICB3YWxsZXRVc2VySWQ6IGF3YWl0IGxvY2FsU3RvcmFnZS5nZXRXYWxsZXRVc2VySWQoKSxcbiAgICAgICAgICAgIGNsaWVudElkOiB0aGlzLmNsaWVudElkLFxuICAgICAgICAgICAgcGFydG5lcklkOiB0aGlzLmVjb3N5c3RlbT8ucGFydG5lcklkLFxuICAgICAgICAgICAgZWNvc3lzdGVtSWQ6IHRoaXMuZWNvc3lzdGVtPy5pZCxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyBUaGlzIGlzIHRoZSBVUkwgYW5kIElEIHRhZyBvZiB0aGUgaUZyYW1lIHRoYXQgd2UgY29tbXVuaWNhdGUgd2l0aFxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluQXBwV2FsbGV0SWZyYW1lTGluayh7IGNsaWVudElkLCBiYXNlVXJsLCBwYXRoLCBlY29zeXN0ZW0sIHF1ZXJ5UGFyYW1zLCB9KSB7XG4gICAgY29uc3QgaW5BcHBXYWxsZXRVcmwgPSBuZXcgVVJMKGAke3BhdGh9YCwgYmFzZVVybCk7XG4gICAgaWYgKHF1ZXJ5UGFyYW1zKSB7XG4gICAgICAgIGZvciAoY29uc3QgcXVlcnlLZXkgb2YgT2JqZWN0LmtleXMocXVlcnlQYXJhbXMpKSB7XG4gICAgICAgICAgICBpbkFwcFdhbGxldFVybC5zZWFyY2hQYXJhbXMuc2V0KHF1ZXJ5S2V5LCBxdWVyeVBhcmFtc1txdWVyeUtleV0/LnRvU3RyaW5nKCkgfHwgXCJcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW5BcHBXYWxsZXRVcmwuc2VhcmNoUGFyYW1zLnNldChcImNsaWVudElkXCIsIGNsaWVudElkKTtcbiAgICBpZiAoZWNvc3lzdGVtPy5wYXJ0bmVySWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpbkFwcFdhbGxldFVybC5zZWFyY2hQYXJhbXMuc2V0KFwicGFydG5lcklkXCIsIGVjb3N5c3RlbS5wYXJ0bmVySWQpO1xuICAgIH1cbiAgICBpZiAoZWNvc3lzdGVtPy5pZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGluQXBwV2FsbGV0VXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJlY29zeXN0ZW1JZFwiLCBlY29zeXN0ZW0uaWQpO1xuICAgIH1cbiAgICByZXR1cm4gaW5BcHBXYWxsZXRVcmw7XG59XG5leHBvcnQgY29uc3QgSU5fQVBQX1dBTExFVF9JRlJBTUVfSUQgPSBcInRoaXJkd2ViLWluLWFwcC13YWxsZXQtaWZyYW1lXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js\n"));

/***/ })

}]);